#!/bin/bash
set -ex -o pipefail

source routing-ci/scripts/script_helpers.sh

ENVIRONMENT="${ENVIRONMENT:?"ENVIRONMENT not set"}"
set +x
  bosh_login "${ENVIRONMENT}"
set -x

ZERODOWNTIME_DEPLOYMENT=$(mktemp -t zero_downtime.XXXX.yml)

cat <<EOF >> "${ZERODOWNTIME_DEPLOYMENT}"
---
name: zero-downtime
addons:
- include:
    stemcell:
    - os: ubuntu-xenial
  jobs:
  - name: bpm
    release: bpm
  name: bpm
update:
  canaries: 1
  canary_watch_time: 10000-300000
  max_in_flight: 5
  serial: false
  update_watch_time: 10000-300000
instance_groups:
- name: drroute_tcp_zero_downtime
  azs:
  - z1
  instances: 1
  vm_type: f1-micro
  stemcell: default
  update:
    max_in_flight: 1
    serial: true
  networks:
  - name: default
  jobs:
  - name: drroute
    release: zero-downtime
  - name: route_registrar
    release: routing
    consumes:
     nats: {from: nats, deployment: cf}
    properties:
      route_registrar:
        routes:
        - name: drroute
          port: 8080
          registration_interval: 20s
          tags:
            component: drroute
          uris:
          - "drroute_zero_downtime_tcp_release.${ENVIRONMENT}.routing.cf-app.com"
- name: drroute_zero_downtime
  azs:
  - z1
  instances: 1
  vm_type: f1-micro
  stemcell: default
  update:
    max_in_flight: 1
    serial: true
  networks:
  - name: default
  jobs:
  - name: drroute
    release: zero-downtime
  - name: route_registrar
    release: routing
    consumes:
     nats: {from: nats, deployment: cf}
    properties:
      route_registrar:
        routes:
        - name: drroute
          port: 8080
          registration_interval: 20s
          tags:
            component: drroute
          uris:
          - "drroute_zero_downtime_release.${ENVIRONMENT}.routing.cf-app.com"
releases:
- name: bpm
  version: latest
- name: routing
  version: latest
- name: zero-downtime
  version: latest
stemcells:
- alias: default
  os: ubuntu-xenial
  version: latest
EOF

function cleanup() {
  pkill ssh || true
}
trap 'cleanup' EXIT

pushd zero-downtime-release
  bosh create-release
  bosh -e "${ENVIRONMENT}" ur --rebase
  bosh -e "${ENVIRONMENT}" -d zero-downtime -n deploy "${ZERODOWNTIME_DEPLOYMENT}"
popd
