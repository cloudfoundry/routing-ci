#!/bin/bash

set -exuo pipefail

root_dir="${PWD}"
release_repo_dir="${root_dir}/release-repo"
final_release_repo_dir="${root_dir}/final-release-repo"
RELEASE_NAME="${RELEASE_NAME:?"\$RELEASE_NAME not set"}"

set +x
if [[ -n "${GCP_BLOBSTORE_SERVICE_ACCOUNT_KEY}" ]]; then
FORMATTED_KEY="$(sed 's/^/      /' <(echo ${GCP_BLOBSTORE_SERVICE_ACCOUNT_KEY}))"
cat > "${release_repo_dir}/config/private.yml" <<EOF
---
blobstore:
  options:
    credentials_source: static
    json_key: |
${FORMATTED_KEY}
EOF
fi
set -x

pushd "${release_repo_dir}" > /dev/null
  git config user.name "${GIT_COMMIT_USERNAME}"
  git config user.email "${GIT_COMMIT_EMAIL}"

  for _ in {1..5}; do
    bosh -v
    bosh -n create-release --final --sha2
    EXIT_STATUS=${PIPESTATUS[0]}
    if [[ "$EXIT_STATUS" = "0" ]]; then
      break
    fi
  done

  if [[ ! "$EXIT_STATUS" = "0" ]]; then
    echo "Failed to Create $RELEASE_NAME Release"
    exit "$EXIT_STATUS"
  fi

  new_release_version=$(cat ${root_dir}/final-version/version)

  echo $new_release_version
  exit 1

  git add .final_builds releases
  git commit -m "Final release ${new_release_version}"
  echo "${new_release_version}" > version_number
popd > /dev/null

shopt -s dotglob
cp -R release-repo/* "${final_release_repo_dir}"
